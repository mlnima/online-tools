.toolPage {
  width: 100%;
  margin: 40px auto 0 auto;
  padding: 2.2rem 2vw 3rem 2vw;
  background: var(--color-card);
  border-radius: 1.1rem;
  box-shadow: 0 2px 18px 0 rgba(0,0,0,0.09);
  border: 1px solid var(--color-border);
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.toolPage h1 {
  color: var(--color-primary);
  font-size: 2rem;
  font-weight: 700;
  margin-bottom: 1.5rem;
}

.toolPage p {
  margin-bottom: 1.3rem;
  color: var(--color-text);
  opacity: 0.9;
}

.formRow {
  width: 100%;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  margin-bottom: 1.2rem;
}

.inputColumn, .outputColumn {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.baseArea{
  padding: 0.7rem 1rem;
  border-radius: 0.5rem;
  border: 1px solid var(--color-border);

  font-size: 1rem;
  font-family: inherit;
  margin-bottom: 1rem;
  resize: vertical;
  transition: border-color 0.2s, background 0.2s;
}

.inputArea, .outputArea {
  @extend .baseArea;
  width: 100%;
  min-width: 320px;
  min-height: 300px;
}

.inputField, .outputField{
  min-width: 150px;
  min-height: 45px;
  max-width: 300px;
}

.inputColor{
  min-width: 60px;
  min-height: 45px;
  max-width: 300px;
  padding: 0;
}

.primarySelect{
  @extend .baseArea;
  min-width: 60px;
  min-height: 45px;
  max-width: 300px;
}

.radioField{
  display: flex;
  align-items: center;
  gap: 1rem;
  margin: 24px 0;
  label{
    display: flex;
    align-items: center;
    input,p{
      margin: 0 .25rem 0 0;
    }
  }
}


.inputArea:focus, .outputArea:focus, .inputField, .outputField {
  border-color: var(--color-primary);
  background: var(--color-card);
}


.previewBox{
  background: var(--color-bg-secondary);
  color: var(--color-text);
  // Consider adding common padding/border-radius here if most previews need it
}

.codeBlock {
  background: var(--color-bg-secondary);
  color: var(--color-text);
  padding: 1rem;
  border-radius: 0.5rem;
  white-space: pre-wrap; // Important for <pre> behavior
  font-family: var(--font-mono, monospace); // Assuming --font-mono might be added to global.scss later, else monospace
  font-size: 0.9rem;
  margin-top: 0.5rem; // Or adjust as needed
  width: 100%;
  box-sizing: border-box;
  word-break: break-all; // To break long unbroken strings
}

.borderRadiusPreview {
  width: 100%;
  height: 150px; // Or a suitable default height
  background: var(--color-bg-tertiary); // As per original inline style
  border: 1px dashed var(--color-border); // Optional: to make it more visible if bg is similar to card
  margin-top: 0.5rem; // Spacing from label
  margin-bottom: 1rem; // Spacing to next element
}

.generatedCss{
  @extend .baseArea;
  width: 100%;
  min-width: 320px;
  min-height: 300px;

}
.buttonRow {
  display: flex;
  justify-content: center;
  gap: 16px;
  margin: 24px 0 0 0;
}

.actionButton {
  background: var(--color-btn-bg);
  color: var(--color-btn-text);
  border: none;
  border-radius: 0.5rem;
  padding: 0.55rem 1.1rem;
  font-size: 1rem;
  font-weight: 600;
  cursor: pointer;
  transition: background 0.2s, color 0.2s;
}
.actionButton:hover {
  background: var(--color-primary);
  color: var(--color-bg);
}

.inputShort {
  width: 120px;
}

//.hexOutput {
//  width: 180px;
//  margin-top: 12px;
//  text-align: center;
//  font-weight: bold;
//  font-family: monospace;
//  font-size: 20px;
//}

.hexSwatchWrapper {
  margin-top: 16px;
}

.hexSwatch {
  display: inline-block;
  width: 40px;
  height: 40px;
  border: 1px solid #ccc;
  border-radius: 8px;
}

.error {
  color: var(--color-error);
  font-size: 0.98rem;
  margin-bottom: 1rem;
  margin-top: 0.2rem;
  text-align: center;
}

.successText {
  color: var(--color-success);
  font-size: 0.98rem;
  margin-bottom: 1rem;
  margin-top: 0.2rem;
  text-align: center;
}

.warning {
  color: var(--color-warning);
  font-size: 0.98rem;
  margin-bottom: 0.7rem;
  margin-top: 0.2rem;
  text-align: center;
}

.result {
  margin-top: 1.2rem;
  font-size: 1.1rem;
  color: var(--color-primary);
  display: flex;
  align-items: center;
  gap: 0.7rem;
}

.colorSwatch {
  display: inline-block;
  width: 24px;
  height: 24px;
  border-radius: 0.4rem;
  border: 1px solid var(--color-border);
}

.label {
  display: block;
  margin-bottom: 0.5rem;
  font-weight: 600;
  color: var(--color-text);
  text-align: left;
  width: 100%;
}

.imagePreview {
  max-width: 100%;
  height: auto;
  margin-top: 1rem;
  border: 1px solid var(--color-border);
  border-radius: 0.5rem;
  display: block;
}

.inputRowContainer {
  display: flex;
  gap: 8px; /* Or use theme variable if available */
  justify-content: center;
  margin-bottom: 8px; /* Or use theme variable */
}

.hexInput {
  width: 120px;
}

.alphaInput {
  width: 80px;
}

.rgbaOutput {
  width: 260px;
  text-align: center;
  font-family: var(--font-mono, monospace);
  font-size: 16px; /* Consider using rem or em */
}

.hsvInputContainer {
  display: flex;
  gap: 8px;
  justify-content: center;
  margin-bottom: 8px;
}

.hsvInput { /* Applied alongside inputField */
  width: 70px;
}

.convertButtonMargin { /* Applied alongside actionButton */
  margin-bottom: 16px;
}

.pantoneResultContainer {
  margin: 0 auto;
  max-width: 320px;
  display: flex;
  flex-direction: column; /* Stack color info and copy button */
  align-items: center; /* Center items including the button */
  gap: 12px; /* Gap between color info and button */
}

.pantoneColorInfo {
  display: flex;
  align-items: center;
  gap: 12px;
  justify-content: center;
  margin-bottom: 8px; /* Original margin from inline style */
}

.pantoneColorPreview {
  width: 36px;
  height: 36px;
  border: 1px solid #ccc; /* Consider using CSS variables for border color */
  border-radius: 6px;
}

.pantoneDetails {
  text-align: left;
}

.pantoneName {
  font-weight: 600;
}

.pantoneCode {
  font-size: 14px; /* Consider using rem or em */
}

.pantoneHexValue {
  font-family: var(--font-mono, monospace);
  font-size: 14px; /* Consider using rem or em */
}

.colorInput { /* Applied alongside inputField */
  width: 220px;
  margin-bottom: 8px;
}

.resultContainer {
  margin: 16px auto 0 auto; /* Added top margin for spacing from error/button */
  max-width: 320px;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 12px;
}

.colorPreviewInfo {
  display: flex;
  align-items: center;
  gap: 12px;
  justify-content: center;
  margin-bottom: 8px; /* As per original inline style */
}

.colorSwatch {
  width: 36px;
  height: 36px;
  border: 1px solid #ccc; /* Consider using CSS variables */
  border-radius: 6px;
}

.colorValues {
  text-align: left;
}

.hexValueOutput {
  font-weight: 600;
}

.rgbValueOutput {
  font-family: var(--font-mono, monospace);
  font-size: 14px; /* Consider using rem or em */
}

.copyButtonGroup {
  display: flex;
  gap: 8px;
  justify-content: center;
}

/* Styles for javascript-to-base64-alt */
.jsBase64Textarea { /* Applied alongside inputArea and outputArea */
  width: 340px;
  font-family: var(--font-mono, monospace);
  font-size: 13px; /* Consider using rem or em */
  background: var(--color-bg-secondary);
}

.jsBase64ConvertButton { /* Applied alongside actionButton */
  margin-bottom: 16px;
  margin-top: 8px;
}

.jsBase64CopyButton { /* Applied alongside actionButton */
  margin-top: 8px;
}

@media (min-width: 480px) {
  .toolPage {
    font-size: 15px;
  }
}


@media (min-width: 768px) {
  .toolPage {
  max-width: 1200px;
  }

  .formRow {
    display: flex;
    /* justify-content: center; // Removed to allow flex:1 to work as expected */
    /* align-items: center; // Can be adjusted if needed, default stretch is fine */
    flex-direction: row;
    /* flex-wrap: wrap; // Removed to enforce two columns */
    gap: 1.5rem; /* Adjusted for desktop */
    margin-bottom: 1.2rem;
  }

  .inputColumn, .outputColumn {
    flex: 1; /* Make columns share space equally */
    /* Re-add min-width if necessary, but child .inputArea/.outputArea has one */
  }

  .inputArea, .outputArea {
    min-width: 100%;
    min-height: 450px;
  }


}


//@media (min-width: 992px) {
//  .toolPage {
//    font-size: 17px;
//  }
//}
//
//
//@media (min-width: 1200px) {
//  .toolPage {
//    font-size: 18px;
//  }
//}
//
//
//@media (min-width: 1400px) {
//  .toolPage {
//    font-size: 19px;
//  }
//}